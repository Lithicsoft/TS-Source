<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>